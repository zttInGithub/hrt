package com.hrt.biz.bill.service.impl;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.BeanUtils;

import com.hrt.biz.bill.dao.IMerAdjustRateDao;
import com.hrt.biz.bill.dao.IMerchantInfoDao;
import com.hrt.biz.bill.entity.model.MerAdjustRateModel;
import com.hrt.biz.bill.entity.model.MerchantInfoModel;
import com.hrt.biz.bill.entity.pagebean.MerAdjustRateBean;
import com.hrt.biz.bill.service.IMerAdjustRateService;
import com.hrt.biz.bill.service.IMerchantInfoService;
import com.hrt.frame.dao.sysadmin.IUnitDao;
import com.hrt.frame.entity.model.UnitModel;
import com.hrt.frame.entity.pagebean.DataGridBean;
import com.hrt.frame.entity.pagebean.UserBean;
import com.hrt.gmms.webservice.IGmmsService;
import com.hrt.gmms.webservice.MerchantInfo;
import com.hrt.util.ClassToJavaBeanUtil;

public class MerAdjustRateServiceImpl implements IMerAdjustRateService {
	
	private IMerchantInfoDao merchantInfoDao;
	private IMerAdjustRateDao adjustRateDao;
	private IUnitDao unitDao;
	private IGmmsService gsClient;
	private IMerchantInfoService merchantInfoService;
	private static final Log log = LogFactory.getLog(MerAdjustRateServiceImpl.class);

	public IGmmsService getGsClient() {
		return gsClient;
	}

	public void setGsClient(IGmmsService gsClient) {
		this.gsClient = gsClient;
	}

	public IMerAdjustRateDao getAdjustRateDao() {
		return adjustRateDao;
	}

	public void setAdjustRateDao(IMerAdjustRateDao adjustRateDao) {
		this.adjustRateDao = adjustRateDao;
	}

	public IMerchantInfoService getMerchantInfoService() {
		return merchantInfoService;
	}

	public void setMerchantInfoService(IMerchantInfoService merchantInfoService) {
		this.merchantInfoService = merchantInfoService;
	}

	public IUnitDao getUnitDao() {
		return unitDao;
	}

	public void setUnitDao(IUnitDao unitDao) {
		this.unitDao = unitDao;
	}

	public IMerchantInfoDao getMerchantInfoDao() {
		return merchantInfoDao;
	}

	public void setMerchantInfoDao(IMerchantInfoDao merchantInfoDao) {
		this.merchantInfoDao = merchantInfoDao;
	}

	public Integer addmerAdjustRateInfo (MerAdjustRateBean adjustRateBean,UserBean user)throws Exception{
		Integer qrnum = 1;
		UnitModel unitModel = unitDao.getObjectByID(UnitModel.class, user.getUnNo());
		MerchantInfoModel m =merchantInfoDao.queryObjectByHql("from MerchantInfoModel t where t.mid=? and t.approveStatus in ('Y','C') and t.isM35=6 ", new Object[]{adjustRateBean.getMid()});
		if(m==null)return 0;
		if("110000".equals(user.getUnNo())){
		}else if(unitModel.getUnAttr() == 2 && unitModel.getUnLvl() == 0){//如果为部门机构并且级别为总公司
			UnitModel parent = unitModel.getParent();
			if("110000".equals(parent.getUnNo())){
			}
		}else{
			if(m.getUnno().equals(user.getUnNo())){
			}else{
				return 0;
			}
		}
		//判断当前登录机构是否已停用
		if(unitModel.getStatus()!=1){
			return 2;
		}
		MerchantInfo info = new MerchantInfo();
		String username = user.getUserName();
		Date date = new Date();
		info.setAccountStatus("2");
		info.setIsM35(6);
		info.setMid(adjustRateBean.getMid());
		info.setSettleCycle(adjustRateBean.getSettleCycle());
		if(adjustRateBean.getSettleCycle()==1){
			adjustRateBean.setSettMethod("000000");
			adjustRateBean.setPreSetTime("");
			adjustRateBean.setQuotaAmt(null);
			m.setSettleRange("00");
		}else if("300000".equals(adjustRateBean.getSettMethod())){
			info.setPresettime(adjustRateBean.getPreSetTime());
			m.setSettleRange(adjustRateBean.getPreSetTime());
			adjustRateBean.setQuotaAmt(null);
		}else if ("400000".equals(adjustRateBean.getSettMethod())){
			info.setQuotaamt(adjustRateBean.getQuotaAmt());
			adjustRateBean.setPreSetTime("");
			m.setSettleRange("00");
		}else{
			adjustRateBean.setPreSetTime("");
			adjustRateBean.setQuotaAmt(null);
		}
		info.setSettMethod(adjustRateBean.getSettMethod().substring(0, 1));// 000000--钱包提现  100000--秒到   300000 --定时结算 400000--按金额结算
		info.setScanRate(adjustRateBean.getScanRate());
		info.setSecondRate(adjustRateBean.getSecondRate());
		info.setCby(username);
		info.setSales("1");//业务人员
		info.setMainTenance("1");//维护人员
		info.setMaintainDate(ClassToJavaBeanUtil.convertToXMLGregorianCalendar(date));
		Boolean falg=gsClient.updateMerchantInfo(info,"hrtREX1234.Java");
		if(!falg){
			return 2;
		}else{
			MerAdjustRateModel adjustRateModel = new MerAdjustRateModel();
			BeanUtils.copyProperties(adjustRateBean, adjustRateModel);
			adjustRateModel.setCdate(date);
			adjustRateModel.setCby(username);
			adjustRateModel.setStatus("Y");
			adjustRateDao.saveObject(adjustRateModel);
			m.setSettleCycle(adjustRateBean.getSettleCycle());
			m.setScanRate(adjustRateBean.getScanRate());
			m.setSecondRate(adjustRateBean.getSecondRate().toString());
			if(adjustRateBean.getSettMethod()!=null){
				m.setSettMethod(adjustRateBean.getSettMethod());// 000000--钱包提现  100000--秒到   300000 --定时结算 400000--按金额结算
				if("300000".equals(adjustRateBean.getSettMethod())){
					m.setPreSetTime(adjustRateBean.getPreSetTime());
				}else if ("400000".equals(adjustRateBean.getSettMethod())){
					m.setQuotaAmt(adjustRateBean.getQuotaAmt());
				}
			}
		}
		return qrnum;
	}
	
	public Integer updateHYBAdjustRateInfo (MerAdjustRateBean adjustRateBean)throws Exception{
		Integer qrnum = 1;
		MerchantInfoModel m =merchantInfoDao.queryObjectByHql("from MerchantInfoModel t where t.mid=? and t.approveStatus in ('Y','C') and t.isM35=6 ", new Object[]{adjustRateBean.getMid()});
		if(m==null)return 0;
		UnitModel unitModel = unitDao.getObjectByID(UnitModel.class, m.getUnno());
		//判断当前登录机构是否已停用
		if(unitModel.getStatus()!=1){
			return 3;
		}
		MerchantInfo info = new MerchantInfo();
		String username = adjustRateBean.getCby();
		Date date = new Date();
		info.setAccountStatus("2");
		info.setIsM35(6);
		info.setMid(adjustRateBean.getMid());
		info.setSettleCycle(adjustRateBean.getSettleCycle());
		if(adjustRateBean.getSettleCycle()==1){
			adjustRateBean.setSettMethod("000000");
			adjustRateBean.setPreSetTime("");
			adjustRateBean.setQuotaAmt(null);
			m.setSettleRange("00");
		}else if("300000".equals(adjustRateBean.getSettMethod())){
			info.setPresettime(adjustRateBean.getPreSetTime());
			m.setSettleRange(adjustRateBean.getPreSetTime());
			adjustRateBean.setQuotaAmt(null);
		}else if ("400000".equals(adjustRateBean.getSettMethod())){
			info.setQuotaamt(adjustRateBean.getQuotaAmt());
			adjustRateBean.setPreSetTime("");
			m.setSettleRange("00");
		}else{
			adjustRateBean.setPreSetTime("");
			adjustRateBean.setQuotaAmt(null);
		}
		info.setSettMethod(adjustRateBean.getSettMethod().substring(0, 1));// 000000--钱包提现  100000--秒到   300000 --定时结算 400000--按金额结算
		if(adjustRateBean.getScanRate()!=null&&!"".equals(adjustRateBean.getScanRate())){
			info.setScanRate(adjustRateBean.getScanRate());
		}
		if(adjustRateBean.getSecondRate()!=null&&!"".equals(adjustRateBean.getSecondRate())){
			info.setSecondRate(adjustRateBean.getSecondRate());
		}
		info.setCby(username);
		info.setSales("1");//业务人员
		info.setMainTenance("1");//维护人员
		info.setMaintainDate(ClassToJavaBeanUtil.convertToXMLGregorianCalendar(date));
		Boolean falg=gsClient.updateMerchantInfo(info,"hrtREX1234.Java");
		if(!falg){
			return 2;
		}else{
			MerAdjustRateModel adjustRateModel = new MerAdjustRateModel();
			BeanUtils.copyProperties(adjustRateBean, adjustRateModel);
			adjustRateModel.setCdate(date);
			adjustRateModel.setCby(username);
			adjustRateModel.setStatus("Y");
			adjustRateDao.saveObject(adjustRateModel);
			m.setSettleCycle(adjustRateBean.getSettleCycle());
			if(adjustRateBean.getScanRate()!=null&&!"".equals(adjustRateBean.getScanRate())){
				m.setScanRate(adjustRateBean.getScanRate());
			}
			if(adjustRateBean.getSecondRate()!=null&&!"".equals(adjustRateBean.getSecondRate())){
				m.setSecondRate(adjustRateBean.getSecondRate()+"");
			}
			if(adjustRateBean.getSettMethod()!=null){
				m.setSettMethod(adjustRateBean.getSettMethod());// 000000--钱包提现  100000--秒到   300000 --定时结算 400000--按金额结算
				if("300000".equals(adjustRateBean.getSettMethod())){
					m.setPreSetTime(adjustRateBean.getPreSetTime());
				}else if ("400000".equals(adjustRateBean.getSettMethod())){
					m.setQuotaAmt(adjustRateBean.getQuotaAmt());
				}
			}
		}
		return qrnum;
	}
	
	public DataGridBean queryAdjustRateinfo (MerAdjustRateBean adjustRateBean,UserBean user)throws Exception{
		
		Map<String, Object> map = new HashMap<String, Object>();
		DataGridBean dgb = new DataGridBean();
		UnitModel unitModel = unitDao.getObjectByID(UnitModel.class, user.getUnNo());
		String sql =" select f.* from bill_meradjustRate f,bill_merchantinfo m where f.mid = m.mid ";
		if("110000".equals(user.getUnNo())){
			
		}else if(unitModel.getUnAttr() == 2 && unitModel.getUnLvl() == 0){		//如果为部门机构并且级别为总公司
			UnitModel parent = unitModel.getParent();
			if("110000".equals(parent.getUnNo())){
			}
		}else{
			sql+=" and m.unno ="+user.getUnNo();
		}
		if(adjustRateBean.getMid()!=null&&!"".equals(adjustRateBean.getMid())){
			sql+=" and f.mid =:mid ";
			map.put("mid", adjustRateBean.getMid());
		}
		if(adjustRateBean.getSettleCycle()!=null&&!"".equals(adjustRateBean.getSettleCycle())){
			sql+=" and f.settleCycle =:settleCycle ";
			map.put("settleCycle", adjustRateBean.getSettleCycle());
		}
		if(adjustRateBean.getSettMethod()!=null&&!"".equals(adjustRateBean.getSettMethod())){
			sql+=" and f.settMethod =:settMethod and f.settleCycle =0 ";
			map.put("settMethod", adjustRateBean.getSettMethod());
		}
		if(adjustRateBean.getStatus()!=null&&!"".equals(adjustRateBean.getStatus())){
			sql+=" and f.status in ("+adjustRateBean.getStatus()+") ";
		}
		if(adjustRateBean.getCdate()!=null&&!"".equals(adjustRateBean.getCdate())){
			sql+=" and trunc(f.cdate) >=trunc(:cdate) ";
			map.put("cdate", adjustRateBean.getCdate());
		}
		if(adjustRateBean.getCdate1()!=null&&!"".equals(adjustRateBean.getCdate1())){
			sql+=" and trunc(f.cdate) <=trunc(:cdate1) ";
			map.put("cdate1", adjustRateBean.getCdate1());
		}
		sql+=" order by f.mjrid desc ";
		List<Map<String, String>> qrList = adjustRateDao.queryObjectsBySqlList(sql, map, adjustRateBean.getPage(), adjustRateBean.getRows());
		String sqlCount = " select count(1) from ("+sql+")";
		BigDecimal counts = adjustRateDao.querysqlCounts(sqlCount, map);
		dgb.setRows(qrList);
		dgb.setTotal(counts.intValue());
		return dgb;
	}

}
